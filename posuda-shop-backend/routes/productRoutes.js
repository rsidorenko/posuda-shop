const express = require("express");
const router = express.Router();
const Product = require("../models/Product");

const auth = require("../middleware/authMiddleware");
const isAdmin = require("../middleware/adminMiddleware");

// üü¢ GET /api/products ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
router.get("/", async (req, res) => {
    try {
        const products = await Product.find();
        res.json(products);
    } catch (err) {
        res.status(500).json({ message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤" });
    }
});

// üî¥ POST /api/products ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä (—Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º)
router.post("/", auth, isAdmin, async (req, res) => {
    const { name, price, image, description } = req.body;

    if (!name || !price) {
        return res.status(400).json({ message: "–ò–º—è –∏ —Ü–µ–Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" });
    }

    try {
        const product = await Product.create({ name, price, image, description });
        res.status(201).json(product);
    } catch (err) {
        res.status(500).json({ message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞" });
    }
});

// ‚ùå DELETE /api/products/:id ‚Äî —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)
router.delete("/:id", auth, isAdmin, async (req, res) => {
    try {
        const product = await Product.findByIdAndDelete(req.params.id);
        if (!product) {
            return res.status(404).json({ message: "–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω" });
        }
        res.json({ message: "–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω" });
    } catch (err) {
        res.status(500).json({ message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞" });
    }
});


module.exports = router;
